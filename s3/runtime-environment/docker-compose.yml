version: "3.7"
name: s3-liferay-oauth-client-extension
services:
  s3-liferay:
    image: liferay/dxp:2024.q1.5
    container_name: s3-liferay
    environment:
      LIFERAY_RETRY_PERIOD_JDBC_PERIOD_ON_PERIOD_STARTUP_PERIOD_DELAY: 10
      LIFERAY_RETRY_PERIOD_JDBC_PERIOD_ON_PERIOD_STARTUP_PERIOD_MAX_PERIOD_RETRIES: 10
      LIFERAY_JVM_OPTS: "-Xms2560m -Xmx4096m"
      # Used by .config files to create client extensions as remote apps in Liferay Control Panel
      APP1_REMOTE_DOMAIN: "http://app1.dev.local:3000"
      APP2_REMOTE_DOMAIN: "http://app2.dev.local:3300"
    networks: 
      - s3-network
    ports: 
      - 8080:8080
      - 127.0.0.1:11311:11311
    volumes:
      - ./liferay-74/mount:/mnt/liferay
      - s3-liferay-tools:/opt/liferay/tools
      - s3-liferay-data:/opt/liferay/data
      - s3-liferay-osgi-configs:/opt/liferay/osgi/configs
      - s3-liferay-osgi-marketplace:/opt/liferay/osgi/marketplace
      - s3-liferay-osgi-modules:/opt/liferay/osgi/modules
      - s3-liferay-osgi-war:/opt/liferay/osgi/war
  s3-apim:
    container_name: s3-apim
    image: kong/kong-gateway:3.6.0.0
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://apim.dev.local:8002
      KONG_PLUGINS: bundled,oauth-liferay-introspect
    networks: 
      - s3-network
    ports: 
      - 8800:8000
      - 8443:8443
      - 8001:8001  
      - 8444:8444
      - 8002:8002  
      - 8445:8445  
      - 8003:8003  
      - 8004:8004
    volumes:
      - ./kong/declarative:/kong/declarative/
      - ./kong/plugins:/kong/plugins/
  s3-app1:
    container_name: s3-app1-react-docker
    build:
      context: ../front-end/app1-docker-example
    networks:
      - s3-network
    ports:
      - 3000:3000
    volumes:
      - ../front-end/app1-docker-example:/app/app1-docker-example
      - /app/app1-docker-example/node_modules
  s3-app2:
    container_name: s3-app2-react-docker
    build:
      context: ../front-end/app2-docker-example
    networks:
      - s3-network
    ports:
      - 3300:3300
    volumes:
      - ../front-end/app2-docker-example:/app/app2-docker-example
      - /app/app2-docker-example/node_modules
  s3-oauth-tester:
    container_name: s3-oauth-tester
    build:
      context: ./oauth-tester
    networks:
      - s3-network
    ports:
      - 80:80
    volumes:
      - ./oauth-tester/conf.d:/etc/nginx/conf.d    
  portainer-ce:
    container_name: portainer
    ports:
        - 9443:9443
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - data:/data
    restart: unless-stopped
    image: portainer/portainer-ce:latest
networks:
  s3-network:
    name: s3-network
volumes:
  s3-liferay-data:
  s3-liferay-tools:
  s3-liferay-osgi-configs:
  s3-liferay-osgi-marketplace:
  s3-liferay-osgi-modules:
  s3-liferay-osgi-war:
  data: